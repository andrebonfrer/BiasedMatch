% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biased_match.R
\name{MHALG}
\alias{MHALG}
\title{Metropolis–Hastings algorithm for a single weight class}
\usage{
MHALG(
  B = 5,
  J = 20,
  N1vec = 150,
  N2vec = 200,
  N0vec = 50,
  M1vec = 40,
  M2vec = 60,
  mvec = 10,
  Cvec = 1,
  eta = 0.001,
  tau = 1000,
  mu0 = 0,
  sig0 = 0.001,
  muinit = 0,
  rinit = 0,
  del = 0.1,
  u = exp(20),
  v = 1,
  hf = 1
)
}
\arguments{
\item{B}{Integer; number of burn‑in iterations.}

\item{J}{Integer; number of sampling iterations after burn‑in.}

\item{N1vec}{Numeric vector; values of \code{N1} for each observation.}

\item{N2vec}{Numeric vector; values of \code{N2} for each observation.}

\item{N0vec}{Numeric vector; values of \code{N} (number of common items) for each observation.}

\item{M1vec}{Numeric vector; values of \code{m1} (sample sizes from urn 1) for each observation.}

\item{M2vec}{Numeric vector; values of \code{m2} (sample sizes from urn 2) for each observation.}

\item{mvec}{Numeric vector; observed numbers of matches.}

\item{Cvec}{Integer vector; indicator assigning each observation to a weight class (should all be 1 for a single class).}

\item{eta, tau, mu0, sig0}{Numeric scalars; hyperparameters for priors on \eqn{\lambda} and \eqn{\mu}.}

\item{muinit, rinit}{Numeric; starting values for \eqn{\mu} and the weight parameters.}

\item{del}{Numeric vector of tuning constants for proposal variances.}

\item{u, v}{Numeric; parameters controlling the link function for the weight parameter (\code{gFUN}).}

\item{hf}{Integer; if 0, use an older version of the helper function, otherwise the default.}
}
\value{
A list with components:
\describe{
\item{muv}{A vector of sampled \eqn{\mu} values of length \code{B+J+1}.}
\item{lamv}{A vector of sampled \eqn{\lambda} values of length \code{B+J+1}.}
\item{rm}{A matrix of sampled weight parameters with dimensions \verb{(B+J+1) × K},
where \code{K = max(Cvec)}.  Each column corresponds to a weight class.}
\item{rar}{A vector of acceptance rates for each weight class.}
}
}
\description{
Implements a Metropolis–Hastings (MH) algorithm for estimating the
parameters of the biased matching model when all observations share a
common weight parameter.  This corresponds to the "Problem 4" algorithm
described by Puza and Bonfrer (2018).  The algorithm samples
from the posterior distributions of the latent weight parameters and
hyperparameters \eqn{\mu} and \eqn{\lambda} under conjugate priors.
}
\details{
The algorithm iteratively samples \eqn{\lambda} from its gamma full
conditional, \eqn{\mu} from its normal full conditional and proposes new
values of the weight parameters via a random‑walk normal proposal.  The
proposed weight is transformed to a bias parameter using the link
function \code{\link[=gFUN]{gFUN()}}, and the acceptance probability is computed
using \code{\link[=HFUN]{HFUN()}} (or \code{\link[=HFUN0]{HFUN0()}} when \code{hf = 0}).

This function is primarily intended for internal use and for reproducing
the results of Puza and Bonfrer (2018).  Users may prefer to call
\code{\link[=SMRMMHALG]{SMRMMHALG()}} when multiple weight classes share common weights.
}
\examples{
# A short MH run on synthetic data (for illustration only; increase J for
# real inference)
set.seed(123)
res <- MHALG(B = 2, J = 10,
             N1vec = 37, N2vec = 45, N0vec = 16,
             M1vec = 12, M2vec = 8, mvec = 3,
             Cvec = 1, del = 0.1)
head(res$muv)

}
